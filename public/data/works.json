[
    {
        "name": "Users' Blogs Management System",
        "id": "01",
        "type": "pc",
        "time": "2021/06",
        "keywords": [
            {
                "name": "Node.js",
                "color": "#42b983"
            },
            {
                "name": "Express.js",
                "color": ""
            },
            {
                "name": "Art-Template",
                "color": "red"
            },
            {
                "name": "サーバサイド",
                "color": "blue"
            },
            {
                "name": "Bootstrap",
                "color": "purple"
            },
            {
                "name": "MongoDB",
                "color": "#42b983"
            },
            {
                "name": "jQuery",
                "color": "indigo"
            }
        ],
        "mainPic": "https://github.com/BlaxBerry/node_blog_management/raw/master/public/images/01.png",
        "pics": [
            {
                "pic": "https://github.com/BlaxBerry/node_blog_management/raw/master/public/images/01.png",
                "desc": "Home"
            },
            {
                "pic": "https://github.com/BlaxBerry/node_blog_management/raw/master/public/images/10.png",
                "desc": "Home"
            },
            {
                "pic": "https://github.com/BlaxBerry/node_blog_management/raw/master/public/images/02.png",
                "desc": "Home"
            },
            {
                "pic": "https://github.com/BlaxBerry/node_blog_management/raw/master/public/images/03.png",
                "desc": "Home"
            },
            {
                "pic": "https://github.com/BlaxBerry/node_blog_management/raw/master/public/images/05.png",
                "desc": "Home"
            },
            {
                "pic": "https://github.com/BlaxBerry/node_blog_management/raw/master/public/images/06.png",
                "desc": "Home"
            },
            {
                "pic": "https://github.com/BlaxBerry/node_blog_management/raw/master/public/images/07.png",
                "desc": "Home"
            }
        ],
        "techTasks": [
            {
                "name": "Node.js",
                "pic": "nodejs.svg",
                "desc": [
                    "この作品は主に Express.js を通じてサーバサイドの作成を練習しました。",
                    "この作品を通じて、動的にHTMLページの作成、ユーザーログイン、HTTP通信、フォームの処理などを練習しました。"
                ]
            },
            {
                "name": "Express.js",
                "pic": "nodejs-express.svg",
                "desc": [
                    "Express.js でサーバサイドを構築しました。",
                    "各ミドルウェア( Middleware )を使用しました。",
                    "MongoDB データベースと接続しました。",
                    "Art-Template テンプレートエンジンを利用して、HTMLテンプレーを動的に作成しました。",
                    "ルートログインガード( Route Guard Login Interception )、ユーザー登録しないと、ページ展示できます。"
                ]
            },
            {
                "name": "MongoDB",
                "pic": "mongodb.svg",
                "desc": [
                    "データベースについて、MongoDBを使用しました。",
                    "mongooseを利用して、Express.js と接続しました。",
                    "Art-Template テンプレートエンジンを利用して、MongoDBのデータをHTMLテンプレーで展示します。"
                ]
            },
            {
                "name": "Bootstrap4",
                "pic": "bootstrap.svg",
                "desc": [
                    "フロントエンドのUIについては、Bootstrapを利用しました。"
                ]
            },
            {
                "name": "jQuery",
                "pic": "jquery.svg",
                "desc": [
                    "フロントエンドについては、Bootstrap4 + Art-Template を使用しましたので。",
                    "フロントエンドの簡単処理については、jQuery を使いました。"
                ]
            },
            {
                "name": "npm",
                "pic": "npm.svg",
                "desc": [
                    "<b>mongoose</b>：Express.jsと接続します。",
                    "<b>Art-Template</b>：テンプレートエンジンを利用して、MongoDBのデータをHTMLテンプレーで展示します。",
                    "<b>session</b>：SessionやCookieを利用し、ログインを記録します。",
                    "<b>Joi</b>：サーバサイドでクライアント側で発送したフォームデータ( form data )を検証します。",
                    "<b>formidable</b>：サーバサイドでクライアント側で登録したファイル( 文章の画像など )検証、分析します。",
                    "<b>bcrypt</b>：サーバサイドでユーザーパスワードを暗号化( ハッシュ化 )してからデータベースに追加し、セキュリティ強化します。"
                ]
            }
        ],
        "desc": "SSR( Server Side Rendering )サーバサイドドレンダリングのブログ展示や管理システムです。Node.jsのExpress.jsを利用してサーバを開発し、フロントからのリクエストに応じて、MongoBDデータベースに接続し、そしてArt-Templateというテンプレートエンジンを通じてHTMLテンプレーを作成します。",
        "function": [
            {
                "name": "Front Side",
                "val": [
                    "ユーザー登録してから、ホームページでアップロードしたブログリスト・ブログリ文章内容を確認することができます。",
                    "一般的なユーザー( normal user)として管理システムにログインでき、自分のみのブログ文章内容を追加・修正・削除することができます。",
                    "スーパー管理者( admin )として管理システムにログインし、全てのユーザーのリスト・ユーザのブログ文章を管理操作することができます。"
                ]
            },
            {
                "name": "Server Side",
                "val": [
                    "SSRサドレンダリング( Server Side Rendering )です。フロントからの各リクエストに応じて、ページをリスポンスします。",
                    "ブラウザのURLを通じてサーバサイドにおける静的リソースを確認することができます。",
                    "フロントからのリクエストに応じて、MongoDBデータベースに接続し、データを追加・修正・削除します。"
                ]
            }
        ],
        "links": [
            {
                "name": "github",
                "icon": "mdi-github",
                "color": "black",
                "to": "https://github.com/BlaxBerry/node_blog_management"
            }
        ]
    },
    {
        "name": "Portfolio 4.0",
        "id": "vue2-portfolio-04",
        "type": "pc",
        "time": "2021/07 ~",
        "keywords": [
            {
                "name": " Vue2",
                "color": "#42b983"
            },
            {
                "name": "JSON",
                "color": ""
            },
            {
                "name": "Vuetify",
                "color": "blue"
            },
            {
                "name": "Scss",
                "color": "pink"
            },
            {
                "name": "JavaScript",
                "color": "yellow"
            },
            {
                "name": "Vue-Router",
                "color": "#42b983"
            },
            {
                "name": "SPA",
                "color": "red"
            },
            {
                "name": "Axios",
                "color": "blue"
            }
        ],
        "mainPic": "https://github.com/BlaxBerry/BlaxBerry.github.io/raw/main/public/pics/home-01.png",
        "pics": [
            {
                "pic": "https://github.com/BlaxBerry/BlaxBerry.github.io/raw/main/public/pics/home-01.png",
                "desc": "Home"
            },
            {
                "pic": "https://github.com/BlaxBerry/BlaxBerry.github.io/raw/main/public/pics/detail-work-01.png",
                "desc": "Home"
            },
            {
                "pic": "https://github.com/BlaxBerry/BlaxBerry.github.io/raw/main/public/pics/detail-work-02.png",
                "desc": "Home"
            },
            {
                "pic": "https://github.com/BlaxBerry/BlaxBerry.github.io/raw/main/public/pics/works.png",
                "desc": "Home"
            },
            {
                "pic": "https://github.com/BlaxBerry/BlaxBerry.github.io/raw/main/public/pics/skills.png",
                "desc": "Home"
            }
        ],
        "techTasks": [
            {
                "name": "Vue2",
                "pic": "vue.svg",
                "desc": [
                    "Vue2 + Vue-Cli を利用して開発しました。",
                    "コンポネート間の通信や、各 Option APIs を練習しました。",
                    "現時点では Vuetify2 を使用したので Vue2 で開発しましたが、将来 Vue3 にの移行する見込みです。"
                ]
            },
            {
                "name": "Vue-Cli",
                "pic": "vue.svg",
                "desc": [
                    "Vue-Cli + Vue2 利用して開発しました。",
                    "大量なコンポネートに分かれて開発しました。",
                    "UIについて、Vuetify2 + Scss を導入しました。",
                    "SPA( Single Page Application )開発のため、Vue-Router を導入しました。",
                    "模擬データベースや Axios を利用しました。",
                    "複雑なデータ処理などがないので、Mixin や Vuex などを使用していません。"
                ]
            },
            {
                "name": "Vue-Router",
                "pic": "vue-router.svg",
                "desc": [
                    "SPA( Single Page Application )のポートフォリオです。",
                    "機能や展示内容により、大量なルートに分かれて開発しました。"
                ]
            },
            {
                "name": "Vuetify2",
                "pic": "vue-vuetify.svg",
                "desc": [
                    "UIコンポネートについて、Vuetify2 を利用し開発しました。",
                    "細かいところについて Scss で調整しました。",
                    "この作品はレスポンシブウェブデザインのため、モバイル端末・PC端末によりレイアウトや展示内容が異なっています。"
                ]
            },
            {
                "name": "Scss",
                "pic": "sass.svg",
                "desc": [
                    "UIコンポネートについて、主に Vuetify2 のコンポネートを利用し開発しました。",
                    "細かいところについて Scss で調整しました。"
                ]
            },
            {
                "name": "Axios",
                "pic": "axios.svg",
                "desc": [
                    "Axios を通じて、模擬データ( 自分で作った JSON の形のデータベース )を請求して、動的にテンプレートを作成し、最後画面上に展示しました。"
                ]
            },
            {
                "name": "JSON",
                "pic": "json.svg",
                "desc": [
                    "展示されている内容について、静的にテンプレートに入力することではなく、自分で JSON の形でデータベースを模擬して作りました。",
                    "Axios を通じて、通信を模擬して、請求したデータをテンプレートにレンダリングしました。"
                ]
            },
            {
                "name": "npm",
                "pic": "npm.svg",
                "desc": [
                    "<b>Vue-Typer</b>：タイピングのようなテキストアニメーションをします。",
                    "<b>Vue-Carousel</b>：シンプルにカルーセルスライダー( Carousel Slider )を作成します。",
                    "<b>Vue-Lazyload</b>：画像の遅延読み込みます。",
                    "将来新しい機能の追加により、他のプラゲインが導入される見込みです。"
                ]
            }
        ],
        "desc": "以前のポートフォリオ練習を重ねて、今回のバージョンはVue-Router + Vuetifyを利用して、静的なWebページではなく、単一ページのSPAサイトを開発しました。そして画面上で展示するデータを、Axiosを通じて、Vue-Cliの中のpublicに保存しているJSONファイルから読み込みます。",
        "function": [
            {
                "name": "Home View",
                "val": [
                    "左上のナビゲーションボタン( Navagation )を通じて、<b>メイン画面・スキルリスト・作品集・プロフィール</b>などの画面に移動することができます。",
                    "右下のバージョンボタンを通じて、ポートフォリオの<b>バージョンアップ</b>に関する内容を確認することができます。"
                ]
            },
            {
                "name": "Profile View",
                "val": [
                    "プロフィール画面で、<b>簡単PR・履歴・プログラミングの勉強タイムライン</b>を確認することができます。"
                ]
            },
            {
                "name": "Skills View & Works View",
                "val": [
                    "Skills画面で、身に付いているスキルが言語・フレームワーク・その他などに分類して展示されれおり、また各スキル画像をクリックしたっら、Detail画面に移動し、スキルに関する詳細を確認することもできます。",
                    "Works画面で、今までの独自開発作品などがPC・Mobile端末に分かれて展示されており、また作品の画像をクリックしたっら、Detail画面に移動し、作品の詳細を確認することもできます。"
                ]
            },
            {
                "name": "Detail View",
                "val": [
                    "Skill Detail画面で、このスキルに関する知識また関連スキルなどについて、確認することができます。",
                    "Work Detail画面で、この作品に関する詳細機能説明・イメージ・使用されているスキルなどを確認することができます。",
                    "Githubボタンを通じてGithubサイトでコードを確認でき、またDemoボタンをクリックしたっらオンラインで作品を確認また使用することもできます。"
                ]
            },
            {
                "name": "Versions Up View",
                "val": [
                    "Versions画面で、今まで開発した各バージョンに関する<b>詳細・使用したスキル・問題点</b>などを確認することができます。"
                ]
            }
        ],
        "links": [
            {
                "name": "github",
                "icon": "mdi-github",
                "color": "black",
                "to": "https://github.com/BlaxBerry/portfolio-version-4"
            },
            {
                "name": "demo",
                "icon": "mdi-camera-iris",
                "color": "blue",
                "to": "/home"
            }
        ]
    },
    {
        "name": "VuePress Static Site Document Blog",
        "id": "vuepress-studynote",
        "type": "pc",
        "time": "2021/9",
        "keywords": [
            {
                "name": "Markdown",
                "color": "black"
            },
            {
                "name": "VuePress",
                "color": "#42b983"
            },
            {
                "name": "HTML",
                "color": "deep-orange"
            },
            {
                "name": "Vue",
                "color": "#42b983"
            },
            {
                "name": "Javascript",
                "color": "yellow"
            }
        ],
        "mainPic": "https://github.com/BlaxBerry/vuepress-studynotes/raw/main/images/01.png",
        "pics": [
            {
                "pic": "https://github.com/BlaxBerry/vuepress-studynotes/raw/main/images/01.png",
                "desc": "Home"
            },
            {
                "pic": "https://github.com/BlaxBerry/vuepress-studynotes/raw/main/images/02.png",
                "desc": "Home"
            },
            {
                "pic": "https://github.com/BlaxBerry/vuepress-studynotes/raw/main/images/03.png",
                "desc": "Home"
            }
        ],
        "techTasks": [
            {
                "name": "VuePress 1.0",
                "pic": "vue-vuepress.svg",
                "desc": [
                    "静的サイトジェネレータVuePressを利用し、Markdownを書くだけのシンプルな静的サイトです。",
                    "ビルド( <b>vuepress build</b> )した後、Markdownが HTML に変更しました。",
                    "ドキュメントサイトとしてビルドして、<a href='https://blaxberry.github.io/vuepress-studynotes/'>GitHub Page</a>でホスティングしました。"
                ]
            },
            {
                "name": " Vue",
                "pic": "vue.svg",
                "desc": [
                    "VuePressは Markdown の中でVueコンポーネントが使えるようになっています。"
                ]
            },
            {
                "name": "npm",
                "pic": "npm.svg",
                "desc": [
                    "<b>vuepress/plugin-search：</b>検索欄機能。",
                    "<b>vuepress/plugin-back-to-top：</b>トップに戻ります。",
                    "<b>vuepress/last-updated：</b>最終更新時間を表示します。",
                    "<b>vuepress-plugin-nprogress：</b>ページを変更する時、プログレスバー( Progress Bar )をページのトッポで表示します。"
                ]
            }
        ],
        "desc": "WordPressではなくVuePressを使用し、Markdownを書くだけで作成した、今までのプログラミングノートに関する静的なドキュメントサイトです。検索・ナビゲーション機能などがあります。",
        "function": [
            {
                "name": "Static Document Site",
                "val": [
                    "今までのプログラミング勉強のMarkDownノートを、VuePressで静的なサイトの形で展示しています。",
                    "VuePressでビルド( vuepress build )した後、Markdownが HTML に変更し、読む時も便利になりました。"
                ]
            }
        ],
        "links": [
            {
                "name": "github",
                "icon": "mdi-github",
                "color": "black",
                "to": "https://github.com/BlaxBerry/vuepress-studynotes/tree/development"
            },
            {
                "name": "demo",
                "icon": "mdi-camera-iris",
                "color": "blue",
                "to": "https://blaxberry.github.io/vuepress-studynotes/"
            }
        ]
    },
    {
        "name": "Electron App Moba Game Characters",
        "id": "relectron01",
        "type": "pc",
        "time": "2021/08",
        "keywords": [
            {
                "name": "Electron",
                "color": "#2c3e50"
            },
            {
                "name": " Vue2",
                "color": "#42b983"
            },
            {
                "name": "Vuetify",
                "color": "blue"
            },
            {
                "name": "Scss",
                "color": "pink"
            },
            {
                "name": "Vue-Router",
                "color": "#42b983"
            },
            {
                "name": "SPA",
                "color": "red"
            },
            {
                "name": "Axios",
                "color": "blue"
            }
        ],
        "mainPic": "https://github.com/BlaxBerry/electron-vue-mobagame/raw/main/public/images/01.png",
        "pics": [
            {
                "pic": "https://github.com/BlaxBerry/electron-vue-mobagame/raw/main/public/images/01.png",
                "desc": "Home"
            },
            {
                "pic": "https://github.com/BlaxBerry/electron-vue-mobagame/raw/main/public/images/02.png",
                "desc": "Home"
            },
            {
                "pic": "https://github.com/BlaxBerry/electron-vue-mobagame/raw/main/public/images/03.png",
                "desc": "Home"
            },
            {
                "pic": "https://github.com/BlaxBerry/electron-vue-mobagame/raw/main/public/images/04.png",
                "desc": "Home"
            },
            {
                "pic": "https://github.com/BlaxBerry/electron-vue-mobagame/raw/main/public/images/05.png",
                "desc": "Home"
            }
        ],
        "techTasks": [
            {
                "name": "Electron",
                "pic": "electron.svg",
                "desc": [
                    "Electron + Vue2 を使って、デスクトップアプリを作成しました。",
                    "Electron に対して、引き続き頑張ります。"
                ]
            },
            {
                "name": "Vue2",
                "pic": "vue.svg",
                "desc": [
                    "Vue2 + Vue-Cli + Vuetify2 を利用して開発しました。",
                    "コンポネート間の通信や、各 Option APIs を練習しました。"
                ]
            },
            {
                "name": "Vue-Cli4",
                "pic": "vue.svg",
                "desc": [
                    "Vue-Cli + Vue2 利用して開発しました。",
                    "大量なコンポネートに分かれて開発しました。",
                    "UIについて、Vuetify2 + Scss を導入しました。",
                    "複雑なデータ処理などがないので、Mixin や Vuex などを使用していません。"
                ]
            },
            {
                "name": "Vue-Router3",
                "pic": "vue-router.svg",
                "desc": [
                    "SPA( Single Page Application )のポートフォリオです。",
                    "機能や展示内容により、ルートに分かれて開発しました。"
                ]
            },
            {
                "name": "npm",
                "pic": "npm.svg",
                "desc": [
                    "<b>Electron-Builder</b>：Electron アプリをパッケージしてビルドします。"
                ]
            },
            {
                "name": "Vuetify2",
                "pic": "vue-vuetify.svg",
                "desc": [
                    "UIコンポネートについて、Vuetify2 を利用し開発しました。",
                    "細かいところについて Scss で調整しました。",
                    "この作品はレスポンシブウェブデザインです。"
                ]
            },
            {
                "name": "Axios",
                "pic": "axios.svg",
                "desc": [
                    "Axiosを利用し、HTTP通信を通じて、フリーAPIからもらったヒーローリストまた武器リストのデータを展示しています。"
                ]
            },
            {
                "name": "Free Data API",
                "pic": "json.svg",
                "desc": [
                    "各ヒーローの画像、詳細、各武器の画像、数値などを Axios を通じて、フリーAPIからもらいました。"
                ]
            }
        ],
        "desc": "デスクトップアプリケーションです。中国人気 MobaGame「王者荣耀」ヒーローの詳細に関するアプリです。この作品を通じて、Electron 関連知識を勉強し、Vue + Vuetify ＋ electron-builder などを練習しました。これから Electron に対してまた引き続き深く勉強したいと思います",
        "function": [
            {
                "name": "Characters' List",
                "val": [
                    "各ヒーローの画像をクリックしたら、ヒーローデーター画面に移動し、詳細内容を確認することができます。"
                ]
            },
            {
                "name": "Characters' Detail",
                "val": [
                    "スライダー( Slider )で、ヒーローの画像が展示されています。",
                    "タブコンテンツ( Tab )で、ヒーロースキルの詳細・ヒーロースの遊びコツ・おすすめの装備などに関する情報を展示しています。"
                ]
            },
            {
                "name": "Weapons' List",
                "val": [
                    "各武器の画像をクリックしたら、ダイアログボックス( Dialog )でこの装備に関する詳細が出てきます。"
                ]
            }
        ],
        "links": [
            {
                "name": "github",
                "icon": "mdi-github",
                "color": "black",
                "to": "https://github.com/BlaxBerry/electron-vue-mobagame"
            }
        ]
    },
    {
        "name": "React Moba Game Characters",
        "id": "reactpc01",
        "type": "pc",
        "time": "2021/08",
        "keywords": [
            {
                "name": "React",
                "color": "blue"
            },
            {
                "name": "Redux",
                "color": "purple"
            },
            {
                "name": "Material",
                "color": "blue"
            },
            {
                "name": "SPA",
                "color": "red"
            },
            {
                "name": "React-Router-Dom",
                "color": ""
            },
            {
                "name": "Scss",
                "color": "pink"
            }
        ],
        "mainPic": "https://github.com/BlaxBerry/react-game-collection/raw/main/public/uploads/01.png",
        "pics": [
            {
                "pic": "https://github.com/BlaxBerry/react-game-collection/raw/main/public/uploads/01.png",
                "desc": "Home"
            },
            {
                "pic": "https://github.com/BlaxBerry/react-game-collection/raw/main/public/uploads/02.png",
                "desc": "Home"
            }
        ],
        "techTasks": [
            {
                "name": "React",
                "pic": "react.svg",
                "desc": [
                    "Create-React-App を利用して開発しました。",
                    "大量なコンポネートに分かれて開発しました。",
                    "Classコンポネート・関数コンポネート、また Hooks も練習しました。",
                    "UIについて、Material UI + Scss を導入しました。",
                    "コンポネートの共通状態については、Redux を利用して保存、管理、操作しました。"
                ]
            },
            {
                "name": "Redux",
                "pic": "redux.svg",
                "desc": [
                    "Redux を利用して、各コンポネートの共通状態を保存、管理、操作しました。",
                    "各ヒーローの台詞ボイスのAudio srcパスが Redux で統一管理されています。"
                ]
            },
            {
                "name": "React-Router-Dom",
                "pic": "react-router-dom.svg",
                "desc": [
                    "SPA( Single Page Application )単一ページアプリケーションです。",
                    "機能や展示内容により、各ルートに分かれて展示しています。"
                ]
            },
            {
                "name": "npm",
                "pic": "npm.svg",
                "desc": [
                    "<b>react-tabs</b>：シンプルでタブ( Tab )を作成します。",
                    "<b>pubsub</b>：( 発行/購読 )を通じての共通状態の管理操作を練習しました。"
                ]
            },
            {
                "name": "Axios",
                "pic": "axios.svg",
                "desc": [
                    "Axiosを利用し、HTTP通信を通じて、フリーAPIからもらったヒーローリストまた武器リストのデータを展示しています。"
                ]
            },
            {
                "name": "Free Data API",
                "pic": "json.svg",
                "desc": [
                    "各ヒーローの画像・詳細・各武器の画像・数値などを Axios を利用し、HTTP通信を通じて、公式サイトのフリーAPIからもらいました。"
                ]
            },
            {
                "name": "Material UI",
                "pic": "react-materialui.svg",
                "desc": [
                    "UIコンポネートについて、Material UI を利用し開発しました。",
                    "細かいところについて Scss で調整しました。",
                    "この作品はレスポンシブウェブデザインです。"
                ]
            },
            {
                "name": "Scss",
                "pic": "sass.svg",
                "desc": [
                    "スタイルの細かいところについて Scss で調整しました。"
                ]
            }
        ],
        "desc": "MobaGame LOL のヒーロー詳細に関するウェブアプリです。この作品を通じて、コンポーネント開発、Redux、React Hooks、react-router-domでのSPA開発SPA、またUIフレームワークの使用を練習しました。",
        "function": [
            {
                "name": "Characters' List",
                "val": [
                    "各ヒーローの画像をクリックしたら、独自のボイスセリフが出てきます。その後ヒーローデーター画面に移動し、詳細内容を確認することができます。"
                ]
            },
            {
                "name": "Characters' Detail",
                "val": [
                    "スライダー( Slider )で、ヒーローの画像が展示されています。",
                    "タブコンテンツ( Tab )で、ヒーロースキルの詳細・ヒーロースの遊びコツ・おすすめの装備などに関する情報を展示しています。"
                ]
            }
        ],
        "links": [
            {
                "name": "github",
                "icon": "mdi-github",
                "color": "black",
                "to": "https://github.com/BlaxBerry/react-game-collection"
            }
        ]
    },
    {
        "name": "Music Player 2.0",
        "id": "vuemusicplayer",
        "type": "pc",
        "time": "2021/05 ~",
        "keywords": [
            {
                "name": " Vue2",
                "color": "#42b983"
            },
            {
                "name": "Vuetify",
                "color": "light-blue"
            },
            {
                "name": "Scss",
                "color": "pink"
            },
            {
                "name": " Vuex",
                "color": "#42b983"
            },
            {
                "name": "ElementUI",
                "color": "blue darken-1"
            },
            {
                "name": "Less",
                "color": "blue"
            },
            {
                "name": "Vue-Router",
                "color": "#42b983"
            },
            {
                "name": "SPA",
                "color": "red"
            }
        ],
        "mainPic": "https://github.com/BlaxBerry/vue-music-player/raw/master/public/images/search-album-01.png",
        "pics": [
            {
                "pic": "https://github.com/BlaxBerry/vue-music-player/raw/master/public/images/search-song-01.png",
                "desc": "Home"
            },
            {
                "pic": "https://github.com/BlaxBerry/vue-music-player/raw/master/public/images/search-album-01.png",
                "desc": "Home"
            },
            {
                "pic": "https://github.com/BlaxBerry/vue-music-player/raw/master/public/images/album.png",
                "desc": "Home"
            },
            {
                "pic": "https://github.com/BlaxBerry/vue-music-player/raw/master/public/images/favourite.png",
                "desc": "Home"
            }
        ],
        "techTasks": [
            {
                "name": "Vue2",
                "pic": "vue.svg",
                "desc": [
                    "Vue2 + Vue-Cli を利用して開発しました。",
                    "コンポネート間の通信や、各 Option APIs を練習しました。",
                    "現時点では Vuetify2 を使用したので Vue2 で開発しましたが、将来 Vue3 にの移行する見込みです。"
                ]
            },
            {
                "name": "VueX",
                "pic": "vue-vuex.svg",
                "desc": [
                    "Vuex を利用して、各コンポネートの共通状態を管理しました。"
                ]
            },
            {
                "name": "Vue-Router",
                "pic": "vue-router.svg",
                "desc": [
                    "SPA( Single Page Application )のポートフォリオです。",
                    "機能や展示内容により、大量なルートに分かれて開発しました。"
                ]
            },
            {
                "name": "ElementUI",
                "pic": "vue-elementui.svg",
                "desc": [
                    "UIコンポネートやスタイルの調整について、最初は <b>Element-UI + Less</b> の組み合わせを利用して開発しました。",
                    "その後は <b>Vuetify2 + Scss</b> のセットに移行しました。"
                ]
            },
            {
                "name": "Vuetify2",
                "pic": "vue-vuetify.svg",
                "desc": [
                    "UIコンポネートについて、Vuetify2 を利用し開発しました。",
                    "細かいところについて Scss で調整しました。",
                    "この作品はレスポンシブウェブデザインのため、モバイル端末・PC端末によりレイアウトや展示内容が異なっています。"
                ]
            },
            {
                "name": "Scss",
                "pic": "sass.svg",
                "desc": [
                    "UIコンポネートについて、主に Vuetify2 のコンポネートを利用し開発しました。",
                    "細かいところについて Scss で調整しました。"
                ]
            },
            {
                "name": "Less",
                "pic": "less.svg",
                "desc": [
                    "最初は <b>Element-UI + Less</b> の組み合わせを利用し、細かいところについて Less で調整しました。",
                    "その後は <b>Vuetify2 + Scss</b> のセットに移行しました。"
                ]
            },
            {
                "name": "npm",
                "pic": "npm.svg",
                "desc": [
                    "<b>Vue-Aplayer</b>",
                    "<b>Vue-video-playe</b>"
                ]
            }
        ],
        "desc": "音楽プレーヤーです。個人専用です( Only for Personal Using )<br/>バージョン2.0として、<b>ダークモード( Dark Theme )</b>を追加し、レイアウトやデザインも書き直しました。<br/>Axios、VueX、UIフレームワークの Vuetify を利用して開発したレスポンシブのSPA( Single Page Application )です。",
        "function": [
            {
                "name": "Search view",
                "val": [
                    "トップの検索欄( Top Nav )を通じて、音楽・MVのキーワードで検索できます。",
                    "検索結果が 音楽・アルバム・MV という３類に分かれ、Tabボタンをクリックしたっら各結果リストをスライド展示されています。",
                    "Songsの検索結果のレイアウト画面が左右二つに分かれ、左は選択された音楽の画像・詳細・コメントで、右は音楽のリストです。"
                ]
            },
            {
                "name": "Song List & Album List & MV List View",
                "val": [
                    "List画面で、おすすめのリストが展示されてます。",
                    "Songのカードをクリックしたっら、音楽が自動再生されます。",
                    "MV・Albumの画像をクリックしたっら、それに対する詳細画面に移動します。"
                ]
            },
            {
                "name": "Album Detail View",
                "val": [
                    "Album Detail画面で、このアルバムに関する詳細・音楽リストが展示されてます。",
                    "Songのカードをクリックしたっら、音楽が自動再生されます。"
                ]
            },
            {
                "name": "MV Detail View",
                "val": [
                    "MV Detail画面で、MV動画・MV詳細・MVアーティスト情報・関連MVリストなどを確認できます。",
                    "関連MVリストの画像をクリックしたっら、MV動画が自動再生されます"
                ]
            }
        ],
        "links": {}
    },
    {
        "name": "Wedding Dress Site",
        "id": "static01",
        "type": "pc",
        "time": "2021/05",
        "keywords": [
            {
                "name": "HTML5",
                "color": "deep-orange"
            },
            {
                "name": "CSS3",
                "color": "light-blue"
            },
            {
                "name": "Bootstrap",
                "color": "purple"
            },
            {
                "name": "jQuery",
                "color": "indigo"
            },
            {
                "name": "JavaScript",
                "color": "yellow"
            },
            {
                "name": "Webpack",
                "color": "cyan"
            }
        ],
        "mainPic": "https://github.com/BlaxBerry/PC-Static-Weddng-Dress/raw/master/images/01.png",
        "pics": [
            {
                "pic": "https://github.com/BlaxBerry/PC-Static-Weddng-Dress/raw/master/images/01.png",
                "desc": "Home"
            },
            {
                "pic": "https://github.com/BlaxBerry/PC-Static-Weddng-Dress/raw/master/images/02.png",
                "desc": "Home"
            },
            {
                "pic": "https://github.com/BlaxBerry/PC-Static-Weddng-Dress/raw/master/images/03.png",
                "desc": "Home"
            },
            {
                "pic": "https://github.com/BlaxBerry/PC-Static-Weddng-Dress/raw/master/images/04.png",
                "desc": "Home"
            }
        ],
        "techTasks": [
            {
                "name": "HTML5",
                "pic": "html.svg",
                "desc": [
                    "架空のサイトで、三大基礎の練習です",
                    "Github Pageで展示されています。",
                    "Bootstrapテンプレートを使用してレスポンシブル開発をしました。"
                ]
            },
            {
                "name": "CSS3",
                "pic": "css.svg",
                "desc": [
                    "SCC3 のFlexレイアウト( Flex Layout )、フィルター( Filter )などを練習しました。",
                    "Bootstrapテンプレートを使用してレスポンシブル開発をしました。"
                ]
            },
            {
                "name": "Bootstrap",
                "pic": "bootstrap.svg",
                "desc": [
                    "Bootstrapテンプレートを使用してレスポンシブル開発をしました。",
                    "レスポンシブウェブデザインで、グリッドシステム( Grid System )を練習し、各端末に応じてページレイアウトを自動調整できます。"
                ]
            },
            {
                "name": "jQuery",
                "pic": "jquery.svg",
                "desc": [
                    "jQueryのDOM操作やアニメーション、例えばページスクロールアニメーション( Page Scroll Aniamtion )などを練習して実現しました。"
                ]
            },
            {
                "name": "JavaScript",
                "pic": "javascript.svg",
                "desc": [
                    "jQueryでJavaScriptをカプセル化して練習しました。"
                ]
            },
            {
                "name": "Webpack",
                "pic": "webpack.svg",
                "desc": [
                    "モジュールバンドラー Webpack を練習しました。"
                ]
            }
        ],
        "desc": "架空のWedding Dressサイトです。各端末に応じてページレイアウトを自動調整することができます。これを通じて、Bootstrapレスポンシブレイアウト、そして。",
        "function": [],
        "links": [
            {
                "name": "github",
                "icon": "mdi-github",
                "color": "black",
                "to": "https://github.com/BlaxBerry/PC-Static-Weddng-Dress"
            },
            {
                "name": "demo",
                "icon": "mdi-camera-iris",
                "color": "blue",
                "to": "https://blaxberry.github.io/PC-Static-Weddng-Dress/"
            }
        ]
    },
    {
        "name": "SSR Game Collection by Rails",
        "id": "rails01",
        "type": "pc",
        "time": "2021/08",
        "keywords": [
            {
                "name": "Ruby",
                "color": "red darken-4"
            },
            {
                "name": "Ruby on Rails",
                "color": "red darken-4"
            },
            {
                "name": "Bootstrap",
                "color": "purple"
            },
            {
                "name": "jQuery",
                "color": "indigo"
            },
            {
                "name": "JavaScript",
                "color": "yellow"
            },
            {
                "name": "Scss",
                "color": "pink"
            }
        ],
        "mainPic": "https://pbs.twimg.com/media/E7zrQWeVUB0pVD2?format=jpg&name=medium",
        "pics": [
            {
                "pic": "https://pbs.twimg.com/media/E7zrQWeVUB0pVD2?format=jpg&name=medium",
                "desc": "Home"
            }
        ],
        "techTasks": [
            {
                "name": "Ruby on Rails",
                "pic": "rails.svg",
                "desc": [
                    "Ruby on Rails の SSRサーバサイドレンダリング( Server Side Rendering )です。",
                    "Ruby on Rails の MVC ( Model、Controller、View )やルーティング( Routes )について練習しました。",
                    "Ruby の ERBテンプレートを練習しました",
                    "sass-rail を導入しました。",
                    "jquery-rails を導入しました。",
                    "Ruby on Rail に対して、引き続き頑張ります。"
                ]
            },
            {
                "name": "Ruby",
                "pic": "ruby.svg",
                "desc": [
                    "Ruby on Rails でサーバサイドを開発するため、Ruby 言語については Class などを勉強しました。",
                    "Ruby に対して、引き続き頑張ります。"
                ]
            },
            {
                "name": "Bootstrap",
                "pic": "bootstrap.svg",
                "desc": [
                    "各ページのUIレイアウトについて、Bootstrap + Scss + ERBテンプレートをを使用して練習しました。",
                    "細かいところについて Scss で調整しました。"
                ]
            },
            {
                "name": "Scss",
                "pic": "sass.svg",
                "desc": [
                    "各viewは主に Ruby の ERBテンプレート + Bootstrap で作成しました。",
                    "細かいところについて Scss で調整しました。"
                ]
            }
        ],
        "desc": "ゲームコレクションのサーバサイドレンダリングです。この作品を通じで、Railsのコントローラー( Controller )、ビュー( View )、ルーティング( route )を練習しました。",
        "function": [],
        "links": [
            {
                "name": "github",
                "icon": "mdi-github",
                "color": "black",
                "to": "https://github.com/BlaxBerry/rails_ssr"
            }
        ]
    },
    {
        "name": "EC PinYouGo Shopping",
        "id": "static02",
        "type": "pc",
        "time": "2020/11",
        "keywords": [
            {
                "name": "HTML5",
                "color": "deep-orange"
            },
            {
                "name": "CSS3",
                "color": "light-blue"
            },
            {
                "name": "JavaScript",
                "color": "yellow"
            },
            {
                "name": "jQuery",
                "color": "indigo"
            }
        ],
        "mainPic": "https://github.com/BlaxBerry/PC-Static-Web-PinYouGoShopping/raw/master/images/screenshot1.png",
        "pics": [
            {
                "pic": "https://github.com/BlaxBerry/PC-Static-Web-PinYouGoShopping/raw/master/images/screenshot1.png",
                "desc": "Home"
            },
            {
                "pic": "https://github.com/BlaxBerry/PC-Static-Web-PinYouGoShopping/raw/master/images/screenshot2.png",
                "desc": "Home"
            },
            {
                "pic": "https://github.com/BlaxBerry/PC-Static-Web-PinYouGoShopping/raw/master/images/screenshot3.png",
                "desc": "Home"
            },
            {
                "pic": "https://github.com/BlaxBerry/PC-Static-Web-PinYouGoShopping/raw/master/images/screenshot4.png",
                "desc": "Home"
            }
        ],
        "techTasks": [
            {
                "name": "HTML5",
                "pic": "html.svg",
                "desc": [
                    "架空のサイトで、三大基礎の練習です。",
                    "Github Pageで展示されています。"
                ]
            },
            {
                "name": "CSS3",
                "pic": "css.svg",
                "desc": [
                    "CSS基礎のボックスモデル・レイアウト・Float・Position( プロパティ )・Transformなどの練習です。"
                ]
            },
            {
                "name": "JavaScript",
                "pic": "javascript.svg",
                "desc": [
                    "JavaScript で基礎のDOM・BOM操作を練習しました。",
                    "RegExp( 正規表現 )を利用して、フロントエンドでフォームの入力データ( form data )を検証します。"
                ]
            },
            {
                "name": "jQuery",
                "pic": "jquery.svg",
                "desc": [
                    "jQuery で基礎のDOM・BOM操作を練習しました。"
                ]
            }
        ],
        "desc": "最初にレイアウトを練習する時の静的な架空のEC( 電子商取引 )サイトです。これを通じて、HTML＋CSSのレイアウトや、JavaScriptでのDOM操作、また正規表現( RegExp )でのフォームデータ( form data )検証などを練習しました。",
        "function": [],
        "links": [
            {
                "name": "github",
                "icon": "mdi-github",
                "color": "black",
                "to": "https://github.com/BlaxBerry/PC-Static-Web-PinYouGoShopping"
            },
            {
                "name": "demo",
                "icon": "mdi-camera-iris",
                "color": "blue",
                "to": "https://blaxberry.github.io/PC-Static-Web-PinYouGoShopping/"
            }
        ]
    },
    {
        "name": "EC QingZhu Shopping",
        "id": "static03",
        "type": "pc",
        "time": "2020/12",
        "keywords": [
            {
                "name": "HTML5",
                "color": "deep-orange"
            },
            {
                "name": "CSS3",
                "color": "light-blue"
            },
            {
                "name": "JavaScript",
                "color": "yellow"
            },
            {
                "name": "jQuery",
                "color": "indigo"
            }
        ],
        "mainPic": "https://github.com/BlaxBerry/PC-Static-Web-QingZhuShopping/raw/master/images/screenshot.png",
        "pics": [
            {
                "pic": "https://github.com/BlaxBerry/PC-Static-Web-QingZhuShopping/raw/master/images/screenshot.png",
                "desc": "Home"
            },
            {
                "pic": "https://github.com/BlaxBerry/PC-Static-Web-QingZhuShopping/raw/master/images/screenshot1.png",
                "desc": "Home"
            },
            {
                "pic": "https://github.com/BlaxBerry/PC-Static-Web-QingZhuShopping/raw/master/images/screenshot2.png",
                "desc": "Home"
            }
        ],
        "techTasks": [
            {
                "name": "HTML5",
                "pic": "html.svg",
                "desc": [
                    "静的な架空のEC( 電子商取引 )サイトです。",
                    "架空のサイトで、三大基礎の練習です。",
                    "Github Pageで展示されています。"
                ]
            },
            {
                "name": "CSS3",
                "pic": "css.svg",
                "desc": [
                    "CSS基礎のボックスモデル・レイアウト・Float・Position( プロパティ )・Transformなどの練習です。"
                ]
            },
            {
                "name": "JavaScript",
                "pic": "javascript.svg",
                "desc": [
                    "JavaScript で基礎のDOM・BOM操作を練習しました。"
                ]
            },
            {
                "name": "jQuery",
                "pic": "jquery.svg",
                "desc": [
                    "jQuery で基礎のDOM・BOM操作を練習しました。",
                    "jQueryの Ajax を通じて、JSONファイルのデータを読み込め、DOM操作して画面上へ追加しました。"
                ]
            }
        ],
        "desc": "最初にレイアウトを練習する時の静的な架空のEC( 電子商取引 )サイトです。この作品を通じてjQueryのAjaxや、DOM操作( 動的な生成、追加など )を練習しました。",
        "function": [],
        "links": [
            {
                "name": "github",
                "icon": "mdi-github",
                "color": "black",
                "to": "https://github.com/BlaxBerry/PC-Static-Web-QingZhuShopping"
            }
        ]
    }
]